CREATE TABLE z_country(
    country_id NUMBER PRIMARY KEY, 
    name VARCHAR2(100)
);


CREATE TABLE z_region(
    region_id NUMBER PRIMARY KEY, 
    name VARCHAR2(100),
    country_id NUMBER, CONSTRAINT FK_region_country FOREIGN KEY (country_id) REFERENCES z_country(country_id)
);

CREATE TABLE z_city(
    city_id NUMBER PRIMARY KEY, 
    name VARCHAR2(100),
    region_id NUMBER, CONSTRAINT FK_city_region FOREIGN KEY (region_id) REFERENCES z_region(region_id)
);

CREATE TABLE z_weather(
    weather_id NUMBER PRIMARY KEY,
    city_id NUMBER, CONSTRAINT FK_wf_city FOREIGN KEY (city_id) REFERENCES z_city(city_id),
    datetime DATE,
    tempmax NUMBER,
    tempmin NUMBER,
    temp NUMBER,
    feelslikemax NUMBER,
    feelslikemin NUMBER,
    feelslike NUMBER,
    dew NUMBER,
    humidity NUMBER,
    precip NUMBER,
    precipcover NUMBER,
    preciptype VARCHAR2(50),
    snow NUMBER,
    snowdepth NUMBER,
    windgust NUMBER,
    windspeed NUMBER,
    winddir NUMBER,
    sealevelpressure NUMBER,
    cloudcover NUMBER,
    visibility NUMBER
);

CREATE TABLE z_astrology(
    astrology_id NUMBER PRIMARY KEY, 
    weather_id NUMBER, CONSTRAINT FK_astrology_weather FOREIGN KEY (weather_id) REFERENCES z_weather(weather_id),
    sunrise DATE,
    sunset DATE,
    moonphase NUMBER
);

CREATE TABLE z_desc(
    desc_id NUMBER PRIMARY KEY, 
    weather_id NUMBER, CONSTRAINT FK_desc_weather FOREIGN KEY (weather_id) REFERENCES z_weather(weather_id),
    conditions VARCHAR(100),
    description VARCHAR(500)
);

CREATE SEQUENCE z_country_seq START WITH 1 INCREMENT BY 1;
CREATE OR REPLACE TRIGGER z_country_auto_increment
BEFORE INSERT ON z_country FOR EACH ROW
BEGIN
    SELECT z_country_seq.NEXTVAL INTO :NEW.country_id FROM DUAL;
END;

CREATE SEQUENCE z_region_seq START WITH 1 INCREMENT BY 1;
CREATE OR REPLACE TRIGGER z_region_auto_increment
BEFORE INSERT ON z_region FOR EACH ROW
BEGIN
    SELECT z_region_seq.NEXTVAL INTO :NEW.region_id FROM DUAL;
END;

CREATE SEQUENCE z_city_seq START WITH 1 INCREMENT BY 1;
CREATE OR REPLACE TRIGGER z_city_auto_increment
BEFORE INSERT ON z_city FOR EACH ROW
BEGIN
    SELECT z_city_seq.NEXTVAL INTO :NEW.city_id FROM DUAL;
END;

CREATE SEQUENCE z_weather_seq START WITH 1 INCREMENT BY 1;
CREATE OR REPLACE TRIGGER z_weather_auto_increment
BEFORE INSERT ON z_weather FOR EACH ROW
BEGIN
    SELECT z_weather_seq.NEXTVAL INTO :NEW.weather_id FROM DUAL;
END;

CREATE SEQUENCE z_astrology_seq START WITH 1 INCREMENT BY 1;
CREATE OR REPLACE TRIGGER z_astrology_auto_increment
BEFORE INSERT ON z_astrology FOR EACH ROW
BEGIN
    SELECT z_astrology_seq.NEXTVAL INTO :NEW.astrology_id FROM DUAL;
END;

CREATE SEQUENCE z_desc_seq START WITH 1 INCREMENT BY 1;
CREATE OR REPLACE TRIGGER z_desc_auto_increment
BEFORE INSERT ON z_desc FOR EACH ROW
BEGIN
    SELECT z_desc_seq.NEXTVAL INTO :NEW.desc_id FROM DUAL;
END;
